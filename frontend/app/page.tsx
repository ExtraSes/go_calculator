"use client";

import "./page.css";
import { ButtonGroup } from "./components/ButtonGroup";
import { useBackend } from "./hooks/useBackend";
import { useEffect, useState } from "react";

export default function Home() {
  const { message, error, handleButtonClick, clearMessage } = useBackend();
  const [lastKeyPressed, setLastKeyPressed] = useState<string>("");

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  useEffect(() => {
    const handleKeyPress = (event: KeyboardEvent) => {
      const key = event.key;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç—É—é –∫–ª–∞–≤–∏—à—É
      setLastKeyPressed(key);
      setTimeout(() => setLastKeyPressed(""), 500);
      
      // –¶–∏—Ñ—Ä—ã 0-9
      if (key >= "0" && key <= "9") {
        handleButtonClick(key);
        return;
      }
      
      // –û–ø–µ—Ä–∞—Ü–∏–∏
      if (["+", "-", "*", "/"].includes(key)) {
        handleButtonClick(key);
        return;
      }
      
      // –†–∞–≤–Ω–æ (Enter –∏–ª–∏ =)
      if (key === "Enter" || key === "=") {
        handleButtonClick("=");
        return;
      }
      
      // –û—á–∏—Å—Ç–∫–∞ (Escape –∏–ª–∏ c)
      if (key === "Escape" || key.toLowerCase() === "c") {
        clearMessage();
        return;
      }
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
    window.addEventListener("keydown", handleKeyPress);
    
    // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      window.removeEventListener("keydown", handleKeyPress);
    };
  }, [handleButtonClick, clearMessage]);

  return (
    <div className="home-container">
      <div className="content-wrapper">
        <div className="text-container">
          <h1 className="main-title">
            –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –î–ï–ú–ò–î–ï–î–ò–®–ù
          </h1>
          <p className="keyboard-hint">
            üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É: —Ü–∏—Ñ—Ä—ã 0-9, –æ–ø–µ—Ä–∞—Ü–∏–∏ +-*/, Enter –¥–ª—è =, Escape –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
          </p>
          {lastKeyPressed && (
            <div className="key-indicator">
              –ù–∞–∂–∞—Ç–∞ –∫–ª–∞–≤–∏—à–∞: <span className="key-highlight">{lastKeyPressed}</span>
            </div>
          )}
          {/* –î–∏—Å–ø–ª–µ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
          <textarea
            readOnly={true}
            value={message || error || "0"}
            className="textarea"
            rows={1}
            cols={20}
            placeholder="0"
          />
          
          <ButtonGroup 
            onButtonClick={handleButtonClick}
            onClear={clearMessage}
          />
        </div>
      </div>
    </div>
  );
}